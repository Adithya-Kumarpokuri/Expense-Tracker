{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adith\\\\OneDrive\\\\Desktop\\\\expense-Tracker\\\\frontend\\\\src\\\\context\\\\globalContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useContext, useState } from \"react\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BASE_URL = \"http://localhost:5000/api/v1/\";\nconst GlobalContext = /*#__PURE__*/React.createContext();\nexport const GlobalProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [incomes, setIncomes] = useState([]);\n  const [expenses, setExpenses] = useState([]);\n  const [error, setError] = useState(null);\n\n  //calculate incomes\n  const addIncome = async income => {\n    const response = await axios.post(`${BASE_URL}add-income`, income).catch(err => {\n      setError(err.response.data.message);\n    });\n    getIncomes();\n  };\n  const getIncomes = async () => {\n    const response = await axios.get(`${BASE_URL}get-incomes`);\n    setIncomes(response.data);\n    console.log(response.data);\n  };\n  const deleteIncome = async id => {\n    const res = await axios.delete(`${BASE_URL}delete-income/${id}`);\n    getIncomes();\n  };\n  const totalIncome = () => {\n    let totalIncome = 0;\n    incomes.forEach(income => {\n      totalIncome = totalIncome + income.amount;\n    });\n    return totalIncome;\n  };\n\n  //calculate incomes\n  const addExpense = async income => {\n    try {\n      const response = await axios.post(`${BASE_URL}add-expense`, income);\n\n      // Assuming userId is stored in localStorage\n      if (localStorage.getItem('user')) {\n        const user = JSON.parse(localStorage.getItem('user'));\n        if (user && user._id) {\n          await getExpenses(user._id); // Pass userId to getExpenses\n        } else {\n          console.error('No valid userId found in localStorage');\n        }\n      }\n    } catch (err) {\n      setError(err.response.data.message);\n    }\n  };\n  const getExpenses = async userId => {\n    console.log(\"correction\", userId);\n    try {\n      // Make GET request with userId as query parameter\n      const response = await axios.get(`${BASE_URL}get-expenses`, {\n        params: {\n          userId\n        }\n      });\n      setExpenses(response.data);\n      console.log(response.data);\n    } catch (error) {\n      console.error('Error fetching expenses:', error);\n    }\n  };\n  const deleteExpense = async (id, userId) => {\n    const res = await axios.delete(`${BASE_URL}delete-expense/${id}/${userId}`);\n    if (localStorage.getItem('user')) {\n      const user = JSON.parse(localStorage.getItem('user'));\n      if (user && user._id) {\n        getExpenses(user._id);\n      } else {\n        console.error('No valid userId found in localStorage');\n      }\n    }\n  };\n  const totalExpenses = () => {\n    let totalIncome = 0;\n    expenses.forEach(income => {\n      totalIncome = totalIncome + income.amount;\n    });\n    return totalIncome;\n  };\n  const totalBalance = () => {\n    return totalIncome() - totalExpenses();\n  };\n  const transactionHistory = () => {\n    const history = [...incomes, ...expenses];\n    history.sort((a, b) => {\n      return new Date(b.createdAt) - new Date(a.createdAt);\n    });\n    return history.slice(0, 3);\n  };\n  return /*#__PURE__*/_jsxDEV(GlobalContext.Provider, {\n    value: {\n      addIncome,\n      getIncomes,\n      incomes,\n      deleteIncome,\n      expenses,\n      totalIncome,\n      addExpense,\n      getExpenses,\n      deleteExpense,\n      totalExpenses,\n      totalBalance,\n      transactionHistory,\n      error,\n      setError\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 9\n  }, this);\n};\n_s(GlobalProvider, \"tEtYkz3TSUkMCKA3FBENwBvPpJ4=\");\n_c = GlobalProvider;\nexport const useGlobalContext = () => {\n  _s2();\n  return useContext(GlobalContext);\n};\n_s2(useGlobalContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"GlobalProvider\");","map":{"version":3,"names":["React","useContext","useState","axios","BASE_URL","GlobalContext","createContext","GlobalProvider","children","incomes","setIncomes","expenses","setExpenses","error","setError","addIncome","income","response","post","catch","err","data","message","getIncomes","get","console","log","deleteIncome","id","res","delete","totalIncome","forEach","amount","addExpense","localStorage","getItem","user","JSON","parse","_id","getExpenses","userId","params","deleteExpense","totalExpenses","totalBalance","transactionHistory","history","sort","a","b","Date","createdAt","slice","useGlobalContext"],"sources":["C:/Users/adith/OneDrive/Desktop/expense-Tracker/frontend/src/context/globalContext.js"],"sourcesContent":["import React, { useContext, useState } from \"react\"\r\nimport axios from 'axios'\r\n\r\n\r\nconst BASE_URL = \"http://localhost:5000/api/v1/\";\r\n\r\n\r\nconst GlobalContext = React.createContext()\r\n\r\nexport const GlobalProvider = ({children}) => {\r\n\r\n    const [incomes, setIncomes] = useState([])\r\n    const [expenses, setExpenses] = useState([])\r\n    const [error, setError] = useState(null)\r\n\r\n    //calculate incomes\r\n    const addIncome = async (income) => {\r\n        const response = await axios.post(`${BASE_URL}add-income`, income)\r\n            .catch((err) =>{\r\n                setError(err.response.data.message)\r\n            })\r\n        getIncomes()\r\n    }\r\n\r\n    const getIncomes = async () => {\r\n        const response = await axios.get(`${BASE_URL}get-incomes`)\r\n        setIncomes(response.data)\r\n        console.log(response.data)\r\n    }\r\n\r\n    const deleteIncome = async (id) => {\r\n        const res  = await axios.delete(`${BASE_URL}delete-income/${id}`)\r\n        getIncomes()\r\n    }\r\n\r\n    const totalIncome = () => {\r\n        let totalIncome = 0;\r\n        incomes.forEach((income) =>{\r\n            totalIncome = totalIncome + income.amount\r\n        })\r\n\r\n        return totalIncome;\r\n    }\r\n\r\n\r\n    //calculate incomes\r\n    const addExpense = async (income) => {\r\n        try {\r\n            const response = await axios.post(`${BASE_URL}add-expense`, income);\r\n            \r\n            // Assuming userId is stored in localStorage\r\n            if(localStorage.getItem('user')){\r\n            const user = JSON.parse(localStorage.getItem('user'));\r\n            if (user && user._id) {\r\n                await getExpenses(user._id);  // Pass userId to getExpenses\r\n            } else {\r\n                console.error('No valid userId found in localStorage');\r\n            }\r\n        }\r\n        } catch (err) {\r\n            setError(err.response.data.message);\r\n        }\r\n    }\r\n    const getExpenses = async (userId) => {\r\n        console.log(\"correction\",userId)\r\n        try {\r\n            // Make GET request with userId as query parameter\r\n            const response = await axios.get(`${BASE_URL}get-expenses`, {\r\n                params: { userId }  \r\n            });\r\n            setExpenses(response.data);  \r\n            console.log(response.data);  \r\n        } catch (error) {\r\n            console.error('Error fetching expenses:', error);\r\n        }\r\n    };\r\n    const deleteExpense = async (id,userId) => {\r\n        const res  = await axios.delete(`${BASE_URL}delete-expense/${id}/${userId}`)\r\n        if(localStorage.getItem('user')){\r\n            const user = JSON.parse(localStorage.getItem('user'));\r\n            if (user && user._id){\r\n                 getExpenses(user._id); \r\n            } else {\r\n                console.error('No valid userId found in localStorage');\r\n            }\r\n        }\r\n    }\r\n\r\n    const totalExpenses = () => {\r\n        let totalIncome = 0;\r\n        expenses.forEach((income) =>{\r\n            totalIncome = totalIncome + income.amount\r\n        })\r\n\r\n        return totalIncome;\r\n    }\r\n\r\n\r\n    const totalBalance = () => {\r\n        return totalIncome() - totalExpenses()\r\n    }\r\n\r\n    const transactionHistory = () => {\r\n        const history = [...incomes, ...expenses]\r\n        history.sort((a, b) => {\r\n            return new Date(b.createdAt) - new Date(a.createdAt)\r\n        })\r\n\r\n        return history.slice(0, 3)\r\n    }\r\n\r\n\r\n    return (\r\n        <GlobalContext.Provider value={{\r\n            addIncome,\r\n            getIncomes,\r\n            incomes,\r\n            deleteIncome,\r\n            expenses,\r\n            totalIncome,\r\n            addExpense,\r\n            getExpenses,\r\n            deleteExpense,\r\n            totalExpenses,\r\n            totalBalance,\r\n            transactionHistory,\r\n            error,\r\n            setError\r\n        }}>\r\n            {children}\r\n        </GlobalContext.Provider>\r\n    )\r\n}\r\n\r\nexport const useGlobalContext = () =>{\r\n    return useContext(GlobalContext)\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}